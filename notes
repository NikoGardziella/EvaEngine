27.3.2025
{
    Performance:
        Rendering
        500 Quads in 3.649 ms with DrawQuadInstanced()

    Physics
    4.688 ms
    4.478 ms


}

28.3.2025
{
    Performance:
        Renderin
        500 white(no color implemented) Quads in 0.982ms 

    Physics
    5.849 ms with   Sequential Loop    for size_t i = 0; i < count; i++

    5.899 ms With Atomic index


    5.830 ms Tried multithreading :(

    4.238 ms  Use a parallel loop to update transforms
    std::for_each(std::execution::par, m_renderSOA.BodyIds.begin(), m_renderSOA.BodyIds.end(),


    3.383 ms with worldDef multthreading left out. ?!

    32.730 ms with 2000 Quads multthreading commented - goes down to after inital collisions 17.136 ms. 12.402 ms after most quads have fallen below the static quad
    12.456 ms with multithreadin, probably not working..

    2.338 ms i dont know how I go this





}

29.03.2025
{

    Physics update 2.466 ms after implementing enki Task Scheduler
}

05.04.2025
{
    🎮 In Practice: Module Ownership
    Module	                             Responsibility
    🔸 VulkanContext	                    Creates device, swapchain, surface, and the descriptor pool (global)

    🔸 GraphicsPipeline	                    Creates shaders, render pass, pipeline layout, descriptor set layout

    🔸 Renderer	                            High-level API, manages UBOs, draws stuff, updates data

    🔸 Buffer,                              UniformBuffer, Texture, DescriptorSet	Wrappers around Vulkan resources

    🔸 Mesh, Renderable	                    Own descriptor sets, vertex/index buffers, textures

}


15.05.2025
{
    With vulkan, optimizations made
    
    500 quads. Rendereding 3.886 ms

    physics: 7.165 ms


}			EE_CORE_WARN("Unsupported layout transition: {} -> {}", std::to_string(oldLayout), std::to_string(newLayout));

▪️ Crater Studios - https://lnkd.in/eGjx-giK
▪️ Wenkly Studio - https://lnkd.in/eDRu-wYH
▪️ Room 8 Studio - https://lnkd.in/ez6-yZ8t
▪️ DragonFly Studio - https://lnkd.in/eDnR85Hi
▪️ Fantastic Pixel Castle - https://lnkd.in/e4Di4fkK
▪️ Games Station Studio - https://lnkd.in/edQCcgDQ
▪️ Escape Velocity Entertainment - https://lnkd.in/e6et2n44
▪️ Skymap Games - https://skymap.com/careers
▪️ Datcroft Games - https://lnkd.in/eFC93Y3X
▪️ Belka Games - https://lnkd.in/ez6yZp28
▪️ thatgamecompany - https://lnkd.in/eJmW_5F2
▪️ Larian Studios - https://larian.com/careers
▪️ Herobeat Studios - https://lnkd.in/eRxBHavz
▪️ Rebel Wolves - https://rebel-wolves.com/
▪️ Series Entertainment - https://lnkd.in/dG3MrF9H
▪️ Oxalis Games - https://lnkd.in/eY82_zGZ
▪️ Failbetter Games - https://lnkd.in/e72NH-9j
▪️ Devoted Studios - https://lnkd.in/eHkfHrPD
▪️ Rocket Science Group - https://lnkd.in/dDZf62fJ
▪️ Keywords Studios -https://lnkd.in/eqbA4K7Y
▪️ Miniclip - https://lnkd.in/ejwNQZSj
▪️ Take-Two Interactive - https://lnkd.in/eYBSTQzy
▪️ Nimble Giant Entertainment - https://lnkd.in/eXW7x2VF
▪️ Ogre Head Studio (OHS) - https://lnkd.in/eithiwt4
▪️ Whiteboard Games - https://lnkd.in/eru6yjnZ
▪️ VOID Interactive - https://lnkd.in/eENSVpZg

[ Begin Frame / Begin Command Buffer ]

    ↓

[ Transition SWAPCHAIN IMAGE to COLOR_ATTACHMENT_OPTIMAL ]
  (if necessary)

    ↓

[ Begin Render Pass ]

    ↓

[ Transition TEXTURE IMAGE to SHADER_READ_ONLY_OPTIMAL ]
    (ONLY if it's not already!)

    ↓

[ Bind Pipeline + Bind Descriptor Sets (texture) ]

    ↓

[ vkCmdDrawIndexed() — your object using the texture ]

    ↓

[ End Render Pass ]

    ↓

[ Transition SWAPCHAIN IMAGE to PRESENT_SRC_KHR ]
    (to prepare for presenting)

    ↓

[ End Command Buffer ]
[ Submit Command Buffer ]
[ Present Frame ]



02.05.2025
{
            Flickering was cause two times calling drawFrame() and Endscene from game.
}